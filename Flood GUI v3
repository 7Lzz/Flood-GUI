local clmain = getsenv(game:GetService("Players").LocalPlayer.PlayerScripts:FindFirstChild("CL_MAIN_GameScript")) or wait()
local char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:wait()
local bb=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
bb:CaptureController()bb:ClickButton2(Vector2.new())
end)
local gmt = getrawmetatable(game)
setreadonly(gmt,false)
local oldindex = gmt.__index
game:GetService("Players").LocalPlayer.PlayerGui.GameGui.HUD.GameStats.Ingame.Info.Time.Count.Text = "RIPECHEESE"
gmt.__index = newcclosure(function(self,b)
    if b=="WalkSpeed" and tostring(self) == "Humanoid" then
        return 
    end
    if b == "JumpPower" then
       return 50 
    end
    return oldindex(self,b)
end)
local fakehum = char:WaitForChild("Humanoid"):Clone()
fakehum.Name = "humanoid"
fakehum.Parent = game.ReplicatedStorage
setupvalue(clmain.swimJump,3,fakehum)
setupvalue(clmain.swimDive,3,fakehum)
getgenv().oof = false
local votemap = game.Players.LocalPlayer.PlayerGui.GameGui.VoteMap
local key = -game:GetService("ReplicatedStorage").Remote.ReqPasskey:InvokeServer()
function vote()
     wait(1)
     game:GetService("ReplicatedStorage").Remote.UpdMapVote:FireServer(key,8,0)
     if not game.Workspace.Multiplayer:WaitForChild("NewMap",7) then
          game:GetService("ReplicatedStorage").Remote.UpdMapVote:FireServer(key,2,0)
     end
end
votemap.Changed:Connect(function(change)
    if change == "Visible" then
	if votemap.Visible == true and getgenv().oof == true then
	    print("Voting..")
	    wait()
       	    vote()
	end
    end
end)
print("Loaded!")
local lp = game.Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local TS = game:GetService("TweenService")
local function Time(targetpos)
    local tme = (targetpos - lp.Character.HumanoidRootPart.Position).Magnitude / math.random(16,20)
    return tme
end
local function tween(pos)
    local toof = TS:Create(lp.Character.HumanoidRootPart, TweenInfo.new(Time(pos),Enum.EasingStyle.Linear,Enum.EasingDirection.Out), {CFrame = CFrame.new(pos)})
    toof:Play()
    return toof
end


getgenv().active = false
spawn(function()
while wait() do
local function oof()
    print(game.Workspace.Multiplayer:WaitForChild("Map").Name)
    wait()
    Map = workspace.Multiplayer:WaitForChild("Map")
    for i,v in pairs(Map:GetDescendants()) do
        if v.Name == "Handle" then
            v:Destroy()
        end
    end
    if Map:FindFirstChild("Settings") ~= nil then
        print(Map.Settings.MapName.Value)
    end
    if Map:FindFirstChild("ExitRegion",true) then
        local oos = tween(Map:FindFirstChild("ExitRegion",true).Position,Map:FindFirstChild("ExitRegion",true).CFrame)
        oos.Completed:wait()
        wait()
        Map:FindFirstChild("ExitRegion",true):Destroy()
        if getgenv().active == true then
            return
        end
    end
    for i,v in pairs(Map:GetDescendants()) do
        if v:IsA("Part") and v:FindFirstChild("TouchInterest") ~= nil and v.Parent ~= nil then
            local toof = tween(v.Position,v.CFrame)
            toof.Completed:wait()
	    wait()
            v:Destroy()
        end
    end
end
if getgenv().active == true then
    oof()
    if Map:FindFirstChild("ExitRegion",true) ~= nil then
    repeat wait() until game.Workspace.Multiplayer:WaitForChild("OldMap")
    game.Players.LocalPlayer.Character.Humanoid.Health = 0
    game.Players.LocalPlayer.CharacterAdded:Wait()
    wait(.1)
    game:GetService("ReplicatedStorage").Remote.AddedWaiting:FireServer(-game:GetService("ReplicatedStorage").Remote.ReqPasskey:InvokeServer())
    wait(.3)
    for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.GameGui.Waiting.UI.Content.Buttons.MapVote.MouseButton1Click)) do
        v:Fire()
    end
    end
end
end
end)
local UIS = game:GetService'UserInputService'
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local colors = {
    SchemeColor = Color3.fromRGB(0,100,255),
    Background = Color3.fromRGB(40, 40, 40),
    Header = Color3.fromRGB(30, 30, 30),
    TextColor = Color3.fromRGB(255,255,255),
    ElementColor = Color3.fromRGB(60, 60, 60)
}
local Window = Library.CreateLib("Flood GUI v3 | By Tomato", colors)
local a = Window:NewTab("Auto")
local l = Window:NewTab("Local-Player")
local b = Window:NewTab("Blatant")
local t = Window:NewTab("TAS")
local k = Window:NewTab("Other")
local auto = a:NewSection("Auto")
local loc = l:NewSection("Local Player")
local blatant = b:NewSection("Blatant")
local tas = t:NewSection("TAS")
local other = k:NewSection("Other")
other:NewButton("Copy Discord Invite", "Copies discord invite to clipboard!", function()
    setclipboard("https://discord.gg/8N2M9fHJqa")
end)
getgenv().ui = true
other:NewKeybind("ToggleUI", "Toggle UI with this keybind.", Enum.KeyCode.J, function()
	if getgenv().ui == true then
		clmain.newAlert("UI Disabled!",Color3.fromRGB(255,0,0))
		getgenv().ui = false
	else
		clmain.newAlert("UI Enabled!",Color3.fromRGB(0,60,255))
		getgenv().ui = true
	end
	Library:ToggleUI()
end)
loc:NewSlider("Walkspeed", "Change your walkspeed!", 100,20,function(t)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = t
end)
UIS.InputBegan:connect(function(UserInput)
    if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space and getgenv().infjump == true then
        lp.Character.HumanoidRootPart.Velocity = Vector3.new(lp.Character.HumanoidRootPart.Velocity.X,50,lp.Character.HumanoidRootPart.Velocity.Z)
    end
end)
loc:NewSlider("JumpPower", "Change your jumppower!", 200,50,function(t)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = t
end)
spawn(function()
    while game.Workspace.Multiplayer:WaitForChild("NewMap") do
        for i,v in pairs(game.Workspace.Multiplayer:WaitForChild("Map"):GetDescendants()) do
            if v.Name == "WaterState" then
                v.Value = "water"
                v.Changed:Connect(function()
                    v.Value = "water"
                end)
            end
        end
    end
end)
local save = getsenv(game:GetService("Players").LocalPlayer.PlayerScripts["CL_MAIN_GameScript"]).takeAir
getgenv().godmode = false
spawn(function()while wait() do
    if getgenv().godmode == true then
        getsenv(game:GetService("Players").LocalPlayer.PlayerScripts["CL_MAIN_GameScript"]).takeAir = function()end
    else
        getsenv(game:GetService("Players").LocalPlayer.PlayerScripts["CL_MAIN_GameScript"]).takeAir = save
    end
end
end)
blatant:NewKeybind("Infinite Air", "Infinite Air/God Mode", Enum.KeyCode.R, function()
	if getgenv().godmode ~= false then
        clmain.newAlert("Infinite Air Disabled!",Color3.fromRGB(255,0,0))
        getgenv().godmode = false
    else
        clmain.newAlert("Infinite Air Enabled!",Color3.fromRGB(0,255,0))
        getgenv().godmode = true
    end
end)
getgenv().noclip = false
blatant:NewKeybind("Noclip", "Walk through some walls!", Enum.KeyCode.G, function()
	if getgenv().noclip ~= false then
        lp.Character:WaitForChild("Torso").CanCollide = getgenv().noclip
        lp.Character:WaitForChild("HumanoidRootPart").CanCollide = getgenv().noclip
        clmain.newAlert("Noclip Disabled!",Color3.fromRGB(255,0,0))
        getgenv().noclip = false
    else
        lp.Character:WaitForChild("Torso").CanCollide = getgenv().noclip
        lp.Character:WaitForChild("HumanoidRootPart").CanCollide = getgenv().noclip
        clmain.newAlert("Noclip Enabled!",Color3.fromRGB(0,255,0))
        getgenv().noclip = true
    end
end)
auto:NewToggle("Auto-Play [High XP]", "Requires TAS files", function(t)
    getgenv().play = t
end)
getgenv().play = false
spawn(function()
    while wait() do
        if getgenv().play ~= false and game.Workspace.Multiplayer:WaitForChild("NewMap") then
            print("Loading TAS for: " .. game.Workspace.Multiplayer:WaitForChild("Map").Settings.MapName.Value)
            local success, response = pcall(readfile,game.Workspace.Multiplayer:WaitForChild("Map").Settings.MapName.Value .. ".json")
            if not success then
                clmain.newAlert("TAS file does not exist, Resetting!",Color3.fromRGB(230,76,0))
                game.Players.LocalPlayer.Character.Humanoid.Health = 0
                game.Players.LocalPlayer.CharacterAdded:Wait()
                wait(.1)
                game:GetService("ReplicatedStorage").Remote.AddedWaiting:FireServer(-game:GetService("ReplicatedStorage").Remote.ReqPasskey:InvokeServer())
		wait(.3)
		for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.GameGui.Waiting.UI.Content.Buttons.MapVote.MouseButton1Click)) do
   			 v:Fire()
		end
            else
                getgenv().RunName = game.Workspace.Multiplayer:WaitForChild("Map").Settings.MapName.Value
                loadstring(game:HttpGet("https://gist.githubusercontent.com/ExploitOnYt/41f9cf6e0d8f11903b531fa42ec20b6b/raw/44577cec7405ea15721aa65679ede3ae33746828/Tas%2520Run", true))()
            end
	    repeat
	    	wait()
	    until game.Workspace.Multiplayer:WaitForChild("OldMap")
            print("TAS completed.")
        end
    end
end)
blatant:NewToggle("Infinite Jump", "Infinitely Jump!", function(t)
    getgenv().infjump = t
end)
getgenv().infjump = false
UIS.InputBegan:connect(function(UserInput)
    if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space and getgenv().infjump == true then
        lp.Character.HumanoidRootPart.Velocity = Vector3.new(lp.Character.HumanoidRootPart.Velocity.X,50,lp.Character.HumanoidRootPart.Velocity.Z)
    end
end)
auto:NewToggle("Auto-Farm [Low XP]", "Automatically wins for you!", function(t)
    getgenv().active = t
end)
auto:NewToggle("Auto-Vote", "Automatically votes for you!", function(t)
    getgenv().oof = t
end)
tas:NewButton("Rejoin","Rejoin game so you can create another TAS",function()
    loadstring(game:HttpGet("https://pastebin.com/raw/1gtVMUz3"))()
end)
tas:NewButton("Create-TAS","Create a TAS, Press then enter lift.",function()
	getgenv().script = function()
   	game.Workspace.DescendantAdded:Connect(function(child)
            if child:IsA("Sound") then
                child:Destroy()
            end
   	end)
    	loadstring(game:HttpGet("https://gist.githubusercontent.com/ExploitOnYt/87466f9b6f9333449c683643e59fdf94/raw/440d5306e1aa87f1ba20e94be005bffe945e0f8a/Tas", true))()
	end
	local secure=loadstring(game:HttpGet("https://raw.githubusercontent.com/ImMejor35/bad-ui-lib-ngl/main/securescript"))()
	secure.runscript("getgenv().script()")
end)
tas:NewButton("Run-TAS","Press then enter lift!",function()
	    print("Loading TAS for: " .. game.Workspace.Multiplayer:WaitForChild("Map").Settings.MapName.Value)
            local success, response = pcall(readfile,game.Workspace.Multiplayer:WaitForChild("Map").Settings.MapName.Value .. ".json")
            if not success then
                clmain.newAlert("TAS file does not exist, Resetting!",Color3.fromRGB(230,76,0))
		game.Players.LocalPlayer.Humanoid.Health = 0
            else
                getgenv().RunName = game.Workspace.Multiplayer:WaitForChild("Map").Settings.MapName.Value
                loadstring(game:HttpGet("https://gist.githubusercontent.com/ExploitOnYt/41f9cf6e0d8f11903b531fa42ec20b6b/raw/44577cec7405ea15721aa65679ede3ae33746828/Tas%2520Run", true))()
            end
	    repeat
	    	wait()
	    until game.Workspace.Multiplayer:WaitForChild("OldMap")
            print("TAS completed.")
end)
wait(.1)
clmain.newAlert("Flooded v3 Loaded!",Color3.fromRGB(0,255,100))
