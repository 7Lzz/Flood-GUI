local Branch = (...);
if Branch == nil then
	Branch = "main";
end
repeat wait() until game:IsLoaded() or game.Loaded:wait()
--anticheat bypass all credits to altlexon
game:GetService("ReplicatedStorage").Remote.ReqCharVars.OnClientInvoke = function()return{}end

getgenv().maps = {}
local script = require(game.ReplicatedStorage.SharedModules.FE2Library)
for i,v in pairs(script.getOfficialMapData()) do
	table.insert(maps,v.mapName)
end
wait = task.wait

local clmain = getsenv( game.Players.LocalPlayer.PlayerScripts["CL_MAIN_GameScript"] )
local save = clmain.newAlert
if getgenv().wow and debugmode == false then
	clmain.newAlert('Already Executed!',Color3.new(1,0,0))
    error('Already Executed')
else
    getgenv().wow=''
end
-- TAS file minifier 
-- Starting from this line to ending line code was made by ian
local HttpService = game:GetService("HttpService")
local function round(x)
    local factorOfTen = 10^(3)
    return math.floor(x * factorOfTen + .5) / factorOfTen
end
local function minfile(file)
    local tasFile = HttpService:JSONDecode(file)
    local minTasFile = {}
    for t,data in ipairs(tasFile) do
        local minData = {}
        for key,val in pairs(data) do
            local minVal = nil
            if type(val) == "table" then
                minVal = {}
                for f,x in ipairs(val) do
                    if type(x) == "number" then table.insert(minVal, round(x))
                    else table.insert(minVal, x) end    
                end
            else
                minVal = round(val)
            end
            minData[key] = minVal
        end
        table.insert(minTasFile, minData)
    end
    return HttpService:JSONEncode(minTasFile)
end
-- ending line
local char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:wait()
local bb = game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
	bb:CaptureController()
	bb:ClickButton2(Vector2.new())
end)

for i,v in ipairs(getnilinstances()) do
	if v.Name == "CL_AntiExploit" then
		print('AntiCheat Disabled.')
		v:Destroy()
	end
end

getgenv().oof = false
local votemap = game.Players.LocalPlayer.PlayerGui.GameGui.VoteMap
local key = -game:GetService("ReplicatedStorage").Remote.ReqPasskey:InvokeServer()
function vote()
	wait(1)
	game:GetService("ReplicatedStorage").Remote.UpdMapVote:FireServer(key, 8, 0)
	if not game.Workspace.Multiplayer:WaitForChild("NewMap", 7) then
		game:GetService("ReplicatedStorage").Remote.UpdMapVote:FireServer(key, 2, 0)
	end
end
game.Players.PlayerAdded:Connect(function()
	if getgenv().autoleave == true then
		game.Players.LocalPlayer:Kick("Auto-Leave is enabled. So you were kicked because a player joined.")	
	end
end)
votemap.Changed:Connect(function(change)
	if change == "Visible" then
		if votemap.Visible == true and getgenv().oof == true then
			print("Voting..")
			wait()
			vote()
		end
	end
end)
print("Loaded!")
local lp = game.Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local TS = game:GetService("TweenService")
local function Time(targetpos)
	local tme = (targetpos - lp.Character.HumanoidRootPart.Position).Magnitude / math.random(16, 20)
	return tme
end
local function tween(pos)
	local toof = TS:Create(lp.Character.HumanoidRootPart, TweenInfo.new(Time(pos), Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
		CFrame = CFrame.new(pos)
	})
	toof:Play()
	return toof
end

local UIS = game:GetService("UserInputService")
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local colors = {
    SchemeColor = Color3.fromRGB(0, 100, 255),
    Background = Color3.fromRGB(40, 40, 40),
    Header = Color3.fromRGB(30, 30, 30),
    TextColor = Color3.fromRGB(255, 255, 255),
    ElementColor = Color3.fromRGB(60, 60, 60)
}
local Window = Library.CreateLib("Flood GUI v3", colors)
local a = Window:NewTab("Auto")
local s = Window:NewTab("Stat Tracker")
local l = Window:NewTab("Local-Player")
local b = Window:NewTab("Blatant")
local t = Window:NewTab("TAS")
local k = Window:NewTab("Other")
local c = Window:NewTab("Credits")

local auto = a:NewSection("Auto")
local statTracker = s:NewSection("Stat Tracker")
local loc = l:NewSection("Local Player")
local blatant = b:NewSection("Blatant")
local tas = t:NewSection("TAS")
local other = k:NewSection("Other")
local credits = c:NewSection("Credits")

getgenv().wow = true

-- Coins Tracker All credits to Moz
local players = game:GetService("Players")
local localPlayer = players.LocalPlayer
local playerGui = localPlayer.PlayerGui
local coinsAmount = playerGui.MenuGui.Shop.Currencies.Coins.Amount

local coinsLabel = statTracker:NewLabel("Coins Earned: 0")
local initialCoins = tonumber(coinsAmount.Text)

-- Gems Tracker All credits to Moz
local gemsAmount = playerGui.MenuGui.Shop.Currencies.Gems.Amount

local gemsLabel = statTracker:NewLabel("Gems Earned: 0")
local initialGems = tonumber(gemsAmount.Text)

-- XP Tracker All credits to Moz
local xpEarnedAmount = playerGui.MenuGui.Goals.Window.Content.Pages.Stats.xpEarned.Amount

local xpLabel = statTracker:NewLabel("XP Earned: 0")
local initialXP = tonumber(xpEarnedAmount.Text)

local coinsEvent = Instance.new("BindableEvent")
local gemsEvent = Instance.new("BindableEvent")
local xpEvent = Instance.new("BindableEvent")

coinsEvent.Event:Connect(function(coins)
    coinsLabel:UpdateLabel("Coins Earned: " .. coins)
end)

gemsEvent.Event:Connect(function(gems)
    gemsLabel:UpdateLabel("Gems Earned: " .. gems)
end)

xpEvent.Event:Connect(function(xp)
    xpLabel:UpdateLabel("XP Earned: " .. xp)
end)

local function trackCoins()
    local currentCoins = tonumber(coinsAmount.Text)
    if initialCoins then
        local coinsEarned = currentCoins - initialCoins
        coinsEvent:Fire(coinsEarned)
    else
        initialCoins = currentCoins
    end
end

local function trackGems()
    local currentGems = tonumber(gemsAmount.Text)
    if initialGems then
        local gemsEarned = currentGems - initialGems
        gemsEvent:Fire(gemsEarned)
    else
        initialGems = currentGems
    end
end

local function trackXP()
    local currentXP = tonumber(xpEarnedAmount.Text)
    if initialXP then
        local xpEarned = currentXP - initialXP
        xpEvent:Fire(xpEarned)
    else
        initialXP = currentXP
    end
end

spawn(function()
    while wait(1) do
        trackCoins()
        trackGems()
        trackXP()
    end
end)

local startTime = os.time()

local timerLabel = statTracker:NewLabel("Timer: 0 seconds")

spawn(function()
    while true do
        local currentTime = os.time() - startTime
        timerLabel:UpdateLabel("Timer: " .. currentTime .. " seconds")
        wait(1)
    end
end)

other:NewKeybind("ToggleUI", "Toggle UI with this keybind.", Enum.KeyCode.J, function()
    if getgenv().ui == true then
        clmain.newAlert("UI Disabled!", Color3.fromRGB(255, 0, 0))
        getgenv().ui = false
    else
        clmain.newAlert("UI Enabled!", Color3.fromRGB(0, 60, 255))
        getgenv().ui = true
    end
    Library:ToggleUI()
end)
other:NewLabel("Discord Invites")
other:NewButton("Copy Tomato-Hub Invite", "Copies Tomato-Hub invite to clipboard!", function()
	setclipboard("https://discord.gg/8N2M9fHJqa")
end)
other:NewButton("Copy Lexon-Hub Invite", "Copies Lexon-Hub invite to clipboard!", function()
	setclipboard("https://discord.gg/ng4CN7Vq")
end)
getgenv().ui = true
loc:NewSlider("Walkspeed", "Change your walkspeed!", 100, 20, function(t)
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = t
end)
loc:NewSlider("JumpPower", "Change your jumppower!", 200, 50, function(t)
	game.Players.LocalPlayer.Character.Humanoid.JumpPower = t
end)

local save = getsenv(game:GetService("Players").LocalPlayer.PlayerScripts["CL_MAIN_GameScript"]).takeAir
getgenv().godmode = false
spawn(function()
	while wait(.04) do
		if getgenv().godmode == true then
			getsenv(game:GetService("Players").LocalPlayer.PlayerScripts["CL_MAIN_GameScript"]).takeAir = function()
				return 0
			end
		else
			getsenv(game:GetService("Players").LocalPlayer.PlayerScripts["CL_MAIN_GameScript"]).takeAir = save
		end
	end
end)
blatant:NewKeybind("Infinite Air", "Infinite Air/God Mode", Enum.KeyCode.R, function()
	if getgenv().godmode ~= false then
		clmain.newAlert("Infinite Air Disabled!", Color3.fromRGB(255, 0, 0))
		getgenv().godmode = false
	else
		clmain.newAlert("Infinite Air Enabled!", Color3.fromRGB(0, 255, 0))
		getgenv().godmode = true
	end
end)
getgenv().noclip = false
blatant:NewKeybind("Noclip", "Walk through some walls!", Enum.KeyCode.G, function()
	lp.Character:WaitForChild("Torso").CanCollide = getgenv().noclip
	lp.Character:WaitForChild("HumanoidRootPart").CanCollide = getgenv().noclip
	lp.Character:WaitForChild("BoundingBox").CanCollide = getgenv().noclip
	if getgenv().noclip ~= false then
		clmain.newAlert("Noclip Disabled!", Color3.fromRGB(255, 0, 0))
		getgenv().noclip = false
	else
		clmain.newAlert("Noclip Enabled!", Color3.fromRGB(0, 255, 0))
		getgenv().noclip = true
	end
end)
blatant:NewButton("Lag Server", "Equip buddy then press", function()
	local key = -game:GetService("ReplicatedStorage").Remote.ReqPasskey:InvokeServer()
	for i = 1, 190, 1 do
		game:GetService("ReplicatedStorage").Remote.ConfirmItem:FireServer(key, 40)
	end
end)
auto:NewToggle("Auto-Play [Working]", "Requires TAS files", function(t)
	getgenv().play = t
end)
getgenv().play = false
task.spawn(function()
		while task.wait(1) do
			local S,r = pcall(function()
				if getgenv().play ~= false then
					loadstring(game:HttpGet("https://raw.githubusercontent.com/ImMejor35/Flood-GUI/"..Branch.."/TAS/TAS%20Player"))
					"TAS Player Fixed & Optimized By Tomato with help from Epix and Voiz"
				end
			end)
			if S ~= true then
				print(r)
			end
		end
end)
getgenv().infjump = false
blatant:NewKeybind("Infinite Jump", "Jump while freefalling!", Enum.KeyCode.M, function(t)
	infjump = not infjump
end)
UIS.InputBegan:connect(function(UserInput,Typed)
	if infjump == true and UserInput.KeyCode == Enum.KeyCode.Space or UserInput.KeyCode == Enum.KeyCode.ButtonA and not Typed then
		lp.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
	end
end)
auto:NewToggle("Auto-Farm [DISCONTINUED]", "Automatically wins for you!", function(t)
end)
--[[auto:NewToggle("Auto-Vote", "Automatically votes for you!", function(t)
	getgenv().oof = t
end)]]
auto:NewButton("Download TAS files", "Downloads Required TAS files!", function()
	for i, v in pairs(maps) do
		local map = HttpService:UrlEncode(v)
		local su = isfile(v..".json")
		if su == true then
			clmain.newAlert(v.." TAS file already exists!",Color3.fromRGB(50,100,255))
		else
			local s, r = pcall(function()
				local tas = game:HttpGet("https://raw.githubusercontent.com/ImMejor35/Flood-GUI/"..Branch.."/TAS%20FILES/"..map..".json")
				if not string.find(tas, "CFrame") then error('file not exist') end
				writefile(v..".json", tas,true) -- minfile(tas) removed
			end)
			if s then
				clmain.newAlert("Downloaded "..v.." TAS file succesfully!",Color3.fromRGB(0,255,0))
			else
				clmain.newAlert("Failed to download "..v.." TAS file. :(",Color3.fromRGB(255,0,0))
			end
		end
		wait()
	end
	clmain.newAlert("Finished Downloading TAS files")
end)
tas:NewButton("Rejoin", "Rejoin game so you can create another TAS", function()
	game:GetService("TeleportService"):Teleport(game:GetService("Players").LocalPlayer)
end)

tas:NewButton("Create-TAS", "Create a TAS, Press then enter lift.", function()
	game.Workspace.DescendantAdded:Connect(function(child)
		if child.ClassName == "Sound" then
			child:Destroy()
		end
	end)
	local Fix = coroutine.wrap(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/ImMejor35/Flood-GUI/"..Branch.."/TAS/TAS%20Record%20Voiz", true))()
	end)
        local ButtonStuff = coroutine.wrap(function()
            for i,v in pairs(game.Workspace:WaitForChild("Map"):GetDescendants()) do
                if v.ClassName == "Part" and v.Size == Vector3.new(3,1,3) then 
                    v.Size = v.Size * 1.8
                    v.Color = Color3.fromRGB(255,140,0)
                    local selectbox = Instance.new("SelectionBox", v)
                    selectbox.Adornee = v
                    selectbox.Color3 = Color3.fromRGB(255,140,0)
                    getgenv().delayy = false
                    v.Touched:Connect(function(part)
                        if delayy == false then
                            clmain.newAlert("Button Touched!",Color3.fromRGB(255,140,0))
                            delayy = true
                            wait(1)
                            delayy = false
                        end
                    end)
                end
            end
        end)
	Fix()
	ButtonStuff()
end)
tas:NewButton("Run-TAS", "Press then enter lift!", function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/ImMejor35/Flood-GUI/"..Branch.."/TAS/TAS%20Player"))
	"TAS Player Fixed By Tomato with help from Epix"
end)


local oldindex
oldindex = hookmetamethod(game, "__index", function(self, b)
	if tostring(self) == "HumanoidRootPart" and b == "Position" and not checkcaller() then
		if getgenv().swim == true then
			return Vector3.new(-23, -153, 0) -- position of lobby water
		else
			return oldindex(self, b) -- normal player position
		end
	end
	return oldindex(self, b)
end)
tas:NewKeybind("Toggle Swim", "Only works while creating TAS.", Enum.KeyCode.T, function()
	if getgenv().swim == true then
		getgenv().swim = false
	else
		getgenv().swim = true
	end
end)
tas:NewButton("Remove Water (TAS)", "Removes water in tas creator", function()
    for i,v in pairs(game.Workspace:GetDescendants()) do
        if string.match(string.lower(v.Name),"water") then
            v:Destroy()
        end
    end
end)
tas:NewToggle("Auto-Leave", "Automatically leaves when player joins!", function(t)
	getgenv().autoleave = t
end)
credits:NewLabel("New Anti-Kick by AltLexon#6917")
credits:NewLabel("TAS script by Voiz#5668 | Reverse Engineered by Tomato")
credits:NewLabel("TAS File Minifier by iaan#8193")
credits:NewLabel("Stat Tracker & other small things by Moz")
credits:NewLabel("Everything else by Tomato")
wait()
if debugmode == true then
	clmain.newAlert("Flood GUI v3 loaded in Debug Mode!",Color3.new(0,0,1))
else
	clmain.newAlert("Flood GUI v3 Loaded!",nil,nil,"rainbow")
end

--resets character to fix lag bug wow
game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health = 0
